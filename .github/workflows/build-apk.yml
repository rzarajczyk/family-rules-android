name: Build APK

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: x64

      - uses: gradle/actions/setup-gradle@v3

      - run: ./gradlew clean assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release-unsigned.apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          if-no-files-found: error

  create-release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-release-unsigned.apk

      - run: ls

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: "app-release-unsigned.apk"
          asset_name: "app-release-unsigned.apk"
          asset_content_type: application/vnd.android.package-archive